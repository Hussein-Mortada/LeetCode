class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int[][] dp = new int[text1.length()][text2.length()];
        for (int[] x: dp) {
            Arrays.fill(x, -1);
        }
        
        return dfs(text1,text2,0,0,dp);
    }
    int dfs(String s1,String s2,int i,int j, int[][] dp){
        if(i==s1.length() || j == s2.length()) return 0;
        if(dp[i][j]!=-1) return dp[i][j];

        if(s1.charAt(i) == s2.charAt(j)){
            dp[i][j] = dfs(s1,s2,i+1,j+1,dp)+1;
            return dp[i][j];
        }
        dp[i][j] = Math.max(dfs(s1,s2,i+1,j,dp),dfs(s1,s2,i,j+1,dp));
        return dp[i][j];
    }
}
