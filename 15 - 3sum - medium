class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> result = new ArrayList<>();
        for(int i= 0; i < n-2;i++){
            if(i==0 || (i>0 && nums[i]!= nums[i-1])){ // move i so that there is no duplicates
                //now we can do two pointers for the rest of array
                int target = -nums[i];
                int left = i+1;
                int right = n-1;
                while(left<right){
                    if(nums[left]+nums[right]==target){
                        result.add(Arrays.asList(nums[i], nums[left], nums[right]));
                        //move left and right until it isnt a duplicate of its previous number
                        while(left<right && nums[left] == nums[left+1])left++;
                        while(left<right && nums[right] == nums[right-1])right--;

                        left++;
                        right--;

                    }else if(nums[left]+nums[right]>target){
                        right--;
                    }else{
                        left++;
                    }
                }
            }
        }
        return result;
    }
}
