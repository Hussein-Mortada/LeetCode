class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        helper(ans,new ArrayList<>(),candidates,target,0,0);
        return ans;
    }
    void helper(List<List<Integer>> ans, List<Integer> list, int[] candidates, int target, int index, int currentSum){
        if(index>=candidates.length || currentSum > target){
            return;
        }
        if(currentSum==target){
            ans.add(new ArrayList<>(list));
            return;
        }

        list.add(candidates[index]);

        helper(ans,list,candidates,target,index, currentSum+candidates[index]);
        list.remove(list.size()-1);
        helper(ans,list,candidates,target,index+1,currentSum);
    }

}
