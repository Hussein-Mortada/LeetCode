class Solution {
    public int largestRectangleArea(int[] heights) {
        int maxArea = 0;
        Stack<Pair<Integer,Integer>> stack = new Stack<>();
        int n = heights.length;
        for(int i =0;i<n;i++){
            int currheight=heights[i];
            int start = i;
            while(!stack.isEmpty() && stack.peek().getValue() > currheight){
                Pair<Integer,Integer> pair = stack.pop();
                int index = pair.getKey();
                int height=pair.getValue();
                maxArea=Math.max(maxArea,height*(i-index));
                start = index; 
            }
            stack.push(new Pair(start,currheight));
        }

        while(!stack.isEmpty()){
          Pair<Integer,Integer> pair = stack.pop();
          int index = pair.getKey();
          int h = pair.getValue();
          maxArea = Math.max(maxArea, h * (n - index));
       }
        return maxArea;
    }
}
