/********************** Java *********************/
class Solution { //  uses casting and binary search to find solution
    public int mySqrt(int x) {
        if (x == 0) return 0;
        if (x == 1) return 1;
        int low = 1;
        long high = x; 
        long mid = 0; 
        while (low <= high) {
            mid = (low + high) / 2; 
            long square = mid * mid;
            if (square == x)
                return (int) mid;
            else if (square < x) {
                low = (int) mid + 1;
            } else {
                high = mid - 1; 
            }
        }
        return (int) high; 
    }
}

/********************** Python *********************/


class Solution(object):
    def mySqrt(self, x):
        l, h = 0, x
        while l <= h:
            mid = (l + h) // 2  
            square = mid * mid
            if square == x:
                return mid
            elif square > x:
                h = mid - 1
            else:
                l = mid + 1
        return h  

