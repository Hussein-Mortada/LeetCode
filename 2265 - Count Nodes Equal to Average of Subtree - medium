/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int match=0;
    public int averageOfSubtree(TreeNode root) {
        calcSubtree(root);
        return match;
    }
    int[] calcSubtree(TreeNode root){
        if(root==null) return new int[]{0,0};

        int[] left = calcSubtree(root.left);
        int[] right = calcSubtree(root.right);

        int sumVals = left[0]+right[0] + root.val;
        int num = left[1]+right[1]+1;

        if(num!=0 && sumVals/num == root.val){
            match++;
        }
        return new int[]{sumVals,num};

    }
}
