/*************************** JAVA ***************/
//solution 1
class Solution {
    public void rotate(int[] nums, int k) {
        int[] rot = new int[nums.length]; 
        for (int i = 0; i < nums.length; i++) {
            int newindex = (i + k) % nums.length;
            rot[newindex] = nums[i];
        }
        System.arraycopy(rot, 0, nums, 0, nums.length);
    }
}
//solution 2 -- much faster
class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k %= n; // Ensure k is within the range of array length
        
        // Reverse the entire array
        reverse(nums, 0, n - 1);
        
        // Reverse the first k elements
        reverse(nums, 0, k - 1);
        
        // Reverse the remaining elements
        reverse(nums, k, n - 1);
    }
    
    private void reverse(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}

