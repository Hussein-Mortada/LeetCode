class Solution {
    public String minWindow(String s, String t) {
        HashMap<Character,Integer> map = new HashMap<>();

        for(char c : t.toCharArray()){
            map.put(c,map.getOrDefault(c,0)+1);
        }

        int left=0;
        int minLength=s.length()+1;
        int subStringStart=0;
        int matched=0;
        for(int right=0;right<s.length();right++){
            char c = s.charAt(right);
            if(map.containsKey(c)){
                map.put(c,map.get(c)-1);
                if(map.get(c)==0) matched++;
            }
            while(matched==map.size()){
                if(minLength > right-left+1){
                    minLength=right-left+1;
                    subStringStart=left;
                }
                char delete = s.charAt(left++);
                if(map.containsKey(delete)){
                    if (map.get(delete) == 0) matched--;
                    map.put(delete,map.get(delete)+1);
                }
            }
        }
        return minLength==s.length()+1? "" : s.substring(subStringStart,subStringStart+minLength);
    }
}
