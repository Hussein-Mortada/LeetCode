class Solution {
    private Map<Character, String> digitToChar = Map.of(
        '2',
        "abc",
        '3',
        "def",
        '4',
        "ghi",
        '5',
        "jkl",
        '6',
        "mno",
        '7',
        "pqrs",
        '8',
        "tuv",
        '9',
        "wxyz"
    );
    
    public List<String> letterCombinations(String digits) {
        if (digits.length() == 0) {
            return new ArrayList();
        }
        List<String> res = new ArrayList<>();
        helper(res,digits,"",0);
        return res;
    }
    void helper(List<String> res, String digits, String combination,int start){
        if(start==digits.length()){
            res.add(combination);
            return;
        }
        if(start>=digits.length()) return;
        String digit = digitToChar.get(digits.charAt(start));
        for(char x: digit.toCharArray()){
            String temp = combination+x;
            helper(res,digits,temp,start+1);
        }
    }
}
