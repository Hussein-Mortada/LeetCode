// java

class Solution {
    public int strStr(String haystack, String needle) {
        if (needle.isEmpty()) {
            return 0; // An empty needle is always found at index 0.
        }
        
        int haystackLength = haystack.length();
        int needleLength = needle.length();
        
        for (int i = 0; i <= haystackLength - needleLength; i++) {
            int j;
            
            // Check if the current substring in haystack matches needle.
            for (j = 0; j < needleLength; j++) {
                if (haystack.charAt(i + j) != needle.charAt(j)) {
                    break;
                }
            }
            
            // If the loop completed without any mismatches, we found a match.
            if (j == needleLength) {
                return i;
            }
        }
        
        return -1; // Needle not found in haystack.
    }
}

// python
class Solution(object):
    def strStr(self, haystack, needle):
        if needle == "":
            return 0
        
        h = len(haystack) - len(needle) 
        n = len(needle)

        for i in range(h+1):
            for j in range(n):
                if(haystack[i+j] != needle[j]):
                    break
                if j== len(needle) -1:
                    return i
        return -1
