class Solution {
    public boolean exist(char[][] board, String word) {
        int ROWS = board.length;
        int COLS = board[0].length;
        for(int row =0;row<ROWS;row++){
            for(int col = 0; col< COLS;col++){
                if(check(board,word,ROWS,COLS,row,col,0)){
                    return true;
                }
            }
        }
        return false;
    }
    boolean check(
    char[][] board,
    String word, 
    int ROWS, 
    int COLS,
    int row, 
    int col, 
    int len){
        if(len >= word.length())return true;
        if(row<0 || row >= ROWS || col < 0 || col >=COLS || 
            board[row][col] != word.charAt(len)){
            return false;
        } 
        boolean exists = false;
        if(board[row][col] == word.charAt(len)){
            // make sure its not a character so that we dont use it again
            board[row][col]+=100; 
            exists =check(board,word,ROWS,COLS,row+1,col,len+1) ||
                    check(board,word,ROWS,COLS,row-1,col,len+1) ||
                    check(board,word,ROWS,COLS,row,col+1,len+1) ||
                    check(board,word,ROWS,COLS,row,col-1,len+1);
            board[row][col]-=100; //set it back to old char
        }
        return exists;
    }
}
