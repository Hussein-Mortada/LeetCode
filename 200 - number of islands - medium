class Solution {
    public int numIslands(char[][] grid) {
        int ROWS = grid.length;
        int COLS = grid[0].length;
        int islands=0;
        for(int row = 0;row<ROWS;row++){
            for(int col=0;col<COLS;col++){
                if(grid[row][col]=='1'){
                    islands++;
                    dfs(grid,row,col,ROWS,COLS);
                }
            }
        }
        return islands;
    }
    void dfs(char[][] grid, int row, int col,int ROWS,int COLS){
        if (row < 0 || row >= ROWS || col < 0 || col >= COLS || grid[row][col] == '0') {
            return;
        }
        grid[row][col] = '0'; //set it to seen
        dfs(grid, row + 1, col, ROWS, COLS);
        dfs(grid, row - 1, col, ROWS, COLS);
        dfs(grid, row, col + 1, ROWS, COLS);
        dfs(grid, row, col - 1, ROWS, COLS);
        
    }
}
