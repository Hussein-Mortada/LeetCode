class Solution {
    public int minEatingSpeed(int[] piles, int h) {
       int left =1;
       int right = getMax(piles);
        int min = Integer.MAX_VALUE;
        while(left<=right){
            int mid = left+(right-left)/2;
            if(canEat(piles,mid,h)){
                right=mid-1;
            }else{
                left=mid+1;
            }
        }
        return left;

    }

    public boolean canEat(int[] piles, int mid, int h){
        long time =0;
        for(int pile:piles){
            time +=  Math.ceil((double) pile / mid);

        }
        return time<=h;
    }



    public int getMax(int[] piles){
        int max =0;
        for(int b : piles){
            max=Math.max(max,b);
        }
        return max;
    }
}
